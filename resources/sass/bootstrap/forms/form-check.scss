// Site delphinpro.ru
// Copyright (c) 2024.

@use '../../config';
@use '../../fn';

//
// Check/radio
//

.form-check {
    display: block;
    min-height: config.$form-check-min-height;
    //margin-bottom: $form-check-margin-bottom;
    padding-left: config.$form-check-padding-start;

    .form-check-input {
        float: left;
        margin-left: config.$form-check-padding-start * -1;
    }
}

//.form-check-reverse {
//    padding-right: $form-check-padding-start;
//    padding-left: 0;
//    text-align: right;
//
//    .form-check-input {
//        float: right;
//        margin-right: $form-check-padding-start * -1;
//        margin-left: 0;
//    }
//}

.form-check-input {
    flex-shrink: 0;
    width: config.$form-check-input-width;
    height: config.$form-check-input-width;
    margin-top: (config.$line-height-base - config.$form-check-input-width) * .5; // line-height minus check height
    transition: config.$form-check-transition;
    vertical-align: top;
    border: config.$form-check-input-border;
    background-color: var(--form-check-bg);
    background-image: var(--form-check-bg-image);
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    appearance: none;
    print-color-adjust: exact; // Keep themed appearance for print

    --form-check-bg: #{config.$form-check-input-bg};

    &[type="checkbox"] {
        border-radius: config.$input-border-radius;
    }

    &[type="radio"] {
        border-radius: 100px;
    }

    &:active {
        //filter: $form-check-input-active-filter;
    }

    &:focus {
        //border-color: $form-check-input-focus-border;
        outline: 0;
        //box-shadow: $form-check-input-focus-box-shadow;
    }

    &:checked {
        border-color: config.$form-check-input-checked-border-color;
        background-color: config.$form-check-input-checked-bg-color;

        &[type="checkbox"] {
            --form-check-bg-image: #{fn.escape-svg(config.$form-check-input-checked-bg-image)};
        }

        &[type="radio"] {
            --form-check-bg-image: #{fn.escape-svg(config.$form-check-radio-checked-bg-image)};
        }
    }

    &[type="checkbox"]:indeterminate {
        border-color: config.$form-check-input-indeterminate-border-color;
        background-color: config.$form-check-input-indeterminate-bg-color;
        --form-check-bg-image: #{fn.escape-svg(config.$form-check-input-indeterminate-bg-image)};
    }

    &:disabled {
        pointer-events: none;
        //opacity: $form-check-input-disabled-opacity;
        filter: none;
    }

    // Use disabled attribute in addition of :disabled pseudo-class
    // See: https://github.com/twbs/bootstrap/issues/28247
    &[disabled],
    &:disabled {
        ~ .form-check-label {
            cursor: default;
            //opacity: $form-check-label-disabled-opacity;
        }
    }
}

//.form-check-label {
//    cursor: $form-check-label-cursor;
//    color: $form-check-label-color;
//}
//
////
//// Switch
////
//
//.form-switch {
//    padding-left: $form-switch-padding-start;
//
//    .form-check-input {
//        width: $form-switch-width;
//
//        margin-left: $form-switch-padding-start * -1;
//        background-image: var(--form-switch-bg);
//        background-position: left center;
//        --form-switch-bg: #{escape-svg($form-switch-bg-image)};
//        @include border-radius($form-switch-border-radius);
//        @include transition($form-switch-transition);
//
//        &:focus {
//            --form-switch-bg: #{escape-svg($form-switch-focus-bg-image)};
//        }
//
//        &:checked {
//            background-position: $form-switch-checked-bg-position;
//
//            @if $enable-gradients {
//                --form-switch-bg: #{escape-svg($form-switch-checked-bg-image)}, var(--gradient);
//            } @else {
//                --form-switch-bg: #{escape-svg($form-switch-checked-bg-image)};
//            }
//        }
//    }
//
//    &.form-check-reverse {
//        padding-right: $form-switch-padding-start;
//        padding-left: 0;
//
//        .form-check-input {
//            margin-right: $form-switch-padding-start * -1;
//            margin-left: 0;
//        }
//    }
//}
//
//.form-check-inline {
//    display: inline-block;
//    margin-right: $form-check-inline-margin-end;
//}
//
//.btn-check {
//    position: absolute;
//    clip: rect(0, 0, 0, 0);
//    pointer-events: none;
//
//    &[disabled],
//    &:disabled {
//        + .btn {
//            pointer-events: none;
//            opacity: $form-check-btn-check-disabled-opacity;
//            filter: none;
//        }
//    }
//}
//
//@if $enable-dark-mode {
//    @include color-mode(dark) {
//        .form-switch .form-check-input:not(:checked):not(:focus) {
//            --form-switch-bg: #{escape-svg($form-switch-bg-image-dark)};
//        }
//    }
//}
